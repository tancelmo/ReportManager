using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Data;
using System.Windows.Documents;
using System.Windows.Input;
using System.Windows.Media;
using System.Windows.Media.Imaging;
using System.Windows.Navigation;
using System.Windows.Shapes;

namespace ReportManager.ViewModels.UserControls
{
    /// <summary>
    /// Interação lógica para UCData3.xam
    /// </summary>
    public partial class UCData3 : UserControl
    {
        public DataTable data = new DataTable();
        public UCData3()
        {
            InitializeComponent();
            DataRetriever.Data3(datagridSN, data);
            Common.TemplatesSelector("TemplateFolder3", CbxTemplates);
        }

        private void datagridSN_Loaded(object sender, RoutedEventArgs e)
        {
            datagridSN.Items.SortDescriptions.Add(new SortDescription("CalibrationId", ListSortDirection.Descending));
            
            Mouse.OverrideCursor = null;
            
            
        }


        private void DataFilter_Checked(object sender, RoutedEventArgs e)
        {

            Common.FilterRangeDate(data, datagridSN, Date1, Date2, "CalibrationDate", SnFilter, TbxInit, TbxFinal, "SerialNumber");
        }

        private void DataFilter_Unchecked(object sender, RoutedEventArgs e)
        {
            if (SnFilter.IsChecked == true)
            {
                Common.FilterRangeSn(data, datagridSN, TbxInit, TbxFinal, "SerialNumber", DataFilter, Date1, Date2, "CalibrationDate");
            }
            else
            {
                data.DefaultView.RowFilter = string.Empty;
                datagridSN.Items.SortDescriptions.Clear();
                datagridSN.Items.SortDescriptions.Add(new SortDescription("CalibrationId", ListSortDirection.Descending));
            }

        }

        private void Date1_SelectedDateChanged(object sender, SelectionChangedEventArgs e)
        {
            if (DataFilter.IsChecked == true)
            {
                Common.FilterRangeDate(data, datagridSN, Date1, Date2, "CalibrationDate", SnFilter, TbxInit, TbxFinal, "SerialNumber");
            }
        }


        private void Date2_SelectedDateChanged(object sender, SelectionChangedEventArgs e)
        {
            if (DataFilter.IsChecked == true)
            {
                Common.FilterRangeDate(data, datagridSN, Date1, Date2, "CalibrationDate", SnFilter, TbxInit, TbxFinal, "SerialNumber");
            }
        }

        private void SnFilter_Checked(object sender, RoutedEventArgs e)
        {
            Common.FilterRangeSn(data, datagridSN, TbxInit, TbxFinal, "SerialNumber", DataFilter, Date1, Date2, "CalibrationDate");
        }

        private void SnFilter_Unchecked(object sender, RoutedEventArgs e)
        {
            if (DataFilter.IsChecked == true)
            {
                Common.FilterRangeDate(data, datagridSN, Date1, Date2, "CalibrationDate", SnFilter, TbxInit, TbxFinal, "SerialNumber");
            }
            else
            {
                data.DefaultView.RowFilter = string.Empty;
                datagridSN.Items.SortDescriptions.Clear();
                datagridSN.Items.SortDescriptions.Add(new SortDescription("CalibrationId", ListSortDirection.Descending));
            }

        }

        private void TbxInit_TextChanged(object sender, TextChangedEventArgs e)
        {
            if (SnFilter.IsChecked == true)
            {
                Common.FilterRangeSn(data, datagridSN, TbxInit, TbxFinal, "SerialNumber", DataFilter, Date1, Date2, "CalibrationDate");
            }
        }

        private void TbxFinal_TextChanged(object sender, TextChangedEventArgs e)
        {
            if (SnFilter.IsChecked == true)
            {
                Common.FilterRangeSn(data, datagridSN, TbxInit, TbxFinal, "SerialNumber", DataFilter, Date1, Date2, "CalibrationDate");
            }
        }

        private void Button_Click(object sender, RoutedEventArgs e)
        {
            if (SnFilter.IsChecked == false & DataFilter.IsChecked == false)
            {
                if (MessageBox.Show(Convert.ToString(FindResource("FilterAlert")), Convert.ToString(FindResource("Tittle")), MessageBoxButton.YesNo, MessageBoxImage.Warning) == MessageBoxResult.No)
                {
                    //do no stuff
                }
                else
                {
                    //do yes stuff
                    datagridSN.SelectAll();
                }
            }
            else
            {
                datagridSN.SelectAll();
            }
            
            
        }

        private void datagridSN_AutoGeneratedColumns(object sender, EventArgs e)
        {
            Common.SNRename(datagridSN);
        }

        private void datagridSN_SelectedCellsChanged(object sender, SelectedCellsChangedEventArgs e)
        {
            Count.Content = Common.CounterSelectedDatagrid(datagridSN, 8) + " Item(s) selecionado(s)";
            
            
        }
    }
}
